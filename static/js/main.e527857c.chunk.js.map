{"version":3,"sources":["components/homepage.js","components/education.js","components/experience.js","components/skills.js","components/resume.js","components/projects.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","hover","key","this","onClick","style","width","height","margin","className","col","raised","getComponent","bind","isOpen","direction","href","rel","target","aria-hidden","Component","Education","startYear","endYear","marginTop","schoolName","Array","from","schoolDescription","map","data","index","info","Experience","jobName","company","location","jobDescription","Skills","groupName","skills","display","skill","progress","Resume","shadow","textAlign","src","ResumeData","profilePhoto","alt","paddingTop","name","color","borderTop","highlights","highlight","contactInfo","contact","type","experience","job","education","school","skillGroup","border","colored","Projects","activeTab","ProjectData","filter","projectGroup","id","projectList","project","minWidth","background","description","onChange","tabId","setState","ripple","toggleCategories","Contact","ContactData","contacts","fontSize","fontFamily","label","App","homeRef","React","createRef","resumeRef","projectsRef","contactRef","ref","current","scrollIntoView","behavior","event","scroll","transparent","title","to","scrollDown","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e527857c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell, Button } from 'react-mdl';\nimport Burger from '@animated-burgers/burger-arrow' \n\n\nimport '@animated-burgers/burger-arrow/dist/styles.css'\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hover: false };\n    }\n\n    getComponent(key) {\n        this.props.onClick(key);\n     }\n\n    render() {\n        return (\n            <div style={{ width: '100%', height: '100%', margin: 'auto' }}>\n                <Grid className=\"home-grid\">\n                    <Cell col={12}>\n                        <div className=\"title-text\">\n                            <h1>Hello, I'm Daniel Rubinstein</h1>\n                            <p>I'm a Software Developer</p>\n\n                            <Button raised onClick={this.getComponent.bind(this)}>\n                                <h5 className=\"button-style\">See more</h5>\n                                <Burger\n                                    isOpen={true}\n                                    direction=\"down\"\n                                    className=\"burger-style\">\n                                </Burger>\n                            </Button>\n                        </div>\n                        \n                        <div className=\"social-links\">\n                            {/* LinkedIn */}\n                            <a href=\"https://www.linkedin.com/in/daniel-rubinstein/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                            </a>\n\n                            {/* Github */}\n                            <a href=\"https://github.com/Rubinstd\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                            </a>\n\n                            {/* Gmail */}\n                            <a href=\"mailto: rubins.daniel@gmail.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-envelope-square\" aria-hidden=\"true\" />\n                            </a>\n\n                            {/* Phone */}\n                            <a href=\"Tel: 647-995-9319\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-phone-square\" aria-hidden=\"true\" />\n                            </a>\n                        </div>\n                    </Cell>\n\n                </Grid>\n            </div>\n        )\n    }\n\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Education extends Component {\n  \n  render() {\n    return(\n      <Grid>\n        <Cell col={4}>\n          <p>{this.props.startYear} - {this.props.endYear}</p>\n        </Cell>\n        <Cell col={8}>\n          <h4 style={{marginTop:'0px'}}>{this.props.schoolName}</h4>\n          {Array.from(this.props.schoolDescription).map( (data, index) => \n            <div key={index}>\n              <p >{data.info}</p>\n            </div>\n          )}\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Education;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Experience extends Component {\n  render() {\n    return(\n      <Grid>\n        <Cell col={4}>\n          <p>{this.props.startYear} - {this.props.endYear}</p>\n        </Cell>\n        <Cell col={8}>\n          <h4 style={{marginTop:'0px'}}>{this.props.jobName}</h4>\n          <h5 style={{marginTop:'0px'}}>{this.props.company} | {this.props.location}</h5>\n          {Array.from(this.props.jobDescription).map( (data, index) => \n            <div key={index}>\n              <p >{data.info}</p>\n            </div>\n          )}\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport { Grid, Cell, ProgressBar } from 'react-mdl';\n\nclass Skills extends Component {\n  render() {\n    return(\n      <Grid>\n        <Cell col={12}>\n          <h3>{this.props.groupName}</h3>\n          {Array.from(this.props.skills).map( (data, index) => \n            <div key={index}>\n              <p >{data.info}</p>\n            </div>\n          )}\n          <div style={{display: 'flex'}}>{this.props.skill} <ProgressBar style={{margin: 'auto', width: '75%'}} progress={this.props.progress} /> </div>\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Skills;","import React, { Component } from 'react';\nimport { Grid, Cell, Card, CardActions, Button } from 'react-mdl';\nimport Education from './education';\nimport Experience from './experience';\nimport Skills from './skills';\nimport ResumeData from '../data/resume.json'\n\nclass Resume extends Component {\n  render() {\n    return (\n      <div>\n        <Card shadow={0} className=\"resume-card\">\n          <Grid>\n            <Cell col={4}>\n              <div style={{ textAlign: 'center' }}>\n                <img\n                  src={ResumeData.profilePhoto}\n                  alt=\"avatar\"\n                  style={{ height: '200px' }}\n                />\n              </div>\n\n              <h2 style={{ paddingTop: '2em' }}>{ResumeData.name}</h2>\n              <h4 style={{ color: 'grey' }}>Coding Monkey</h4>\n              <hr style={{ borderTop: '3px solid #C14953', width: '50%' }} />\n              {ResumeData.highlights.map(highlight =>\n                <div key={highlight.info}>\n                  <p>{highlight.info}</p>\n                </div>\n\n              )}\n              <hr style={{ borderTop: '3px solid #C14953', width: '50%' }} />\n              {ResumeData.contactInfo.map(contact =>\n                <div key={contact.type}>\n                  <h5>{contact.type}</h5>\n                  <p>{contact.info}</p>\n                </div>\n              )}\n            </Cell>\n            <Cell className=\"resume-right-col\" col={8}>\n              <h2>Experience</h2>\n              {ResumeData.experience.map((job, index) =>\n                <Experience\n                  key={index}\n                  startYear={job.startYear}\n                  endYear={job.endYear}\n                  jobName={job.jobName}\n                  company={job.company}\n                  location={job.location}\n                  jobDescription={job.jobDescription}\n                />\n              )}\n\n              <h2>Education</h2>\n              {ResumeData.education.map((school, index) =>\n                <Education\n                  key={index}\n                  startYear={school.startYear}\n                  endYear={school.endYear}\n                  schoolName={school.name}\n                  schoolDescription={school.schoolDescription}\n                />\n              )}\n\n              <h2>Skills</h2>\n              {ResumeData.skills.map((skillGroup, index) =>\n                <Skills\n                  key={index}\n                  groupName={skillGroup.groupName}\n                  skills={skillGroup.skills}\n                />\n              )}\n            </Cell>\n          </Grid>\n          <CardActions border>\n            <Button colored>Download Resume</Button>\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n}\nexport default Resume;","import React, {Component} from 'react';\nimport { Tabs, Tab, Card, CardTitle, CardMenu, CardText, CardActions, Button, IconButton, Grid, Cell} from 'react-mdl';\nimport ProjectData from '../data/projectdata.json';\n\nclass Projects extends Component{\n    constructor(props){\n        super(props);\n        this.state = { activeTab: 0 };\n    }\n    toggleCategories(){\n      return(\n        <div className=\"projects-grid\">\n          {ProjectData.filter( projectGroup => projectGroup.id === this.state.activeTab)\n                      .map( (data) => data.projectList.map( (project) => \n                        <Card key={project.id} shadow={5} style={{ minWidth: '300px', margin: '10px' }}>\n                          <CardTitle style={{ color: '#fff', height: '176px', background: 'url(https://xtnotes-1255646395.coshk.myqcloud.com/images/react-1.svg) center / cover' }} >{project.name}</CardTitle>\n                          <CardText>\n                            {project.description}\n                          </CardText>\n                          <CardActions border>\n                            <Button colored>GitHub</Button>\n                            <Button colored>CodePen</Button>\n                            <Button colored>Live Demo</Button>\n                          </CardActions>\n                          <CardMenu style={{ color: '#fff' }}>\n                            <IconButton name=\"share\" />\n                          </CardMenu>\n                        </Card>\n                      ))\n          }\n        </div>\n      )\n    }\n    \n    render(){\n        return(\n            <div className=\"resume-card\">\n              <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\n              {ProjectData.map((projectGroup) => {\n                return (\n                  <Tab key={projectGroup.id}>{projectGroup.name}</Tab>\n                )\n              })}\n              </Tabs>\n                <Grid>\n                  <Cell col={12}>\n                    <div className=\"content\">{this.toggleCategories()}</div>\n                  </Cell>\n                </Grid>\n            </div>\n          )\n    }\n\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { Grid, Cell, List, ListItem, ListItemContent, Card } from 'react-mdl';\nimport ContactData from '../data/contactinfo.json'\n\nclass Contact extends Component {\n  render() {\n    return (\n      <Card shadow={0} className=\"contact-card\">\n        <div className=\"\">\n          <Grid className=\"contact-grid\">\n            <Cell col={6}>\n              <h2>Contact Me</h2>\n              <p>I am currently looking for a long term Co-op position (preferably 12+ months) for the May 2020 term.</p>\n              <hr />\n              <div className=\"contact-list\">\n                <List>\n                  {ContactData.contacts.map(info =>\n                    <ListItem key={info.info}>\n                      <ListItemContent style={{ fontSize: '25px', fontFamily: 'Anton' }}>\n                        <i className={info.label} aria-hidden=\"true\" />\n                        {info.info}\n                      </ListItemContent>\n                    </ListItem>\n                  )}\n                </List>\n              </div>\n            </Cell>\n          </Grid>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content, Grid, Cell, Button } from 'react-mdl';\nimport { Link } from 'react-router-dom';\nimport Home from './components/homepage';\nimport Resume from './components/resume';\nimport Projects from './components/projects';\nimport Contact from './components/contact';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.homeRef = React.createRef();\n    this.resumeRef = React.createRef();\n    this.projectsRef = React.createRef();\n    this.contactRef = React.createRef();\n  }\n\n  scroll(ref) {\n    ref.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  scrollDown(event){\n    this.scroll(this.resumeRef);\n  }\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout className=\"header-color\" >\n          <Header className=\"\" \n          transparent \n          title=\"Daniel Rubinstein\" \n          to=\"/\" \n          style={{ color: 'white' }}>\n            <Navigation>\n              <Link to=\"/\" onClick={() => {this.scroll(this.homeRef)}}>Home</Link>\n              <Link to=\"/\" onClick={() => {this.scroll(this.resumeRef)}}>Resume</Link>\n              <Link to=\"/\" onClick={() => {this.scroll(this.projectsRef)}}>Projects</Link>\n              <Link to=\"/\" onClick={() => {this.scroll(this.contactRef)}}>Contacts</Link>\n            </Navigation>\n          </Header>\n          {/*<Drawer title={<Link style={{ textDecoration: 'none', color: 'black' }} to=\"/\"\n          onClick={() => {this.scroll(this.homeRef)}}>\n            Daniel Rubinstein</Link>}>\n            <Navigation>\n              <Button onClick={() => { this.scroll(this.resumeRef) }}>Resume</Button>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n    </Drawer> */}\n          <Content>\n\n            <Grid>\n              <Cell style={{ width: '100%', height: '70%' }}>\n                <div ref={this.homeRef}>\n                  <Home onClick={this.scrollDown.bind(this)}/>\n                </div>\n                \n              </Cell>\n              <Cell style={{ width: '100%', height: '70%' }}>\n                <div ref={this.resumeRef}>\n                  <Resume />\n                </div>\n              </Cell>\n\n              <Cell style={{ width: '100%', height: '70%' }}>\n                <div ref={this.projectsRef}>\n                <Projects/>\n                </div>\n              </Cell>\n\n              <Cell style={{ width: '100%', height: '70%' }}>\n                <div ref={this.contactRef}>\n                <Contact />\n                </div>\n              </Cell>\n            </Grid>\n          </Content>\n        </Layout>\n      </div>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}